{"version":3,"sources":["store/index.ts","helpers/api.ts","components/TodoCard/TodoCard.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["ORDER","sortBy","field","type","isLoading","state","hasError","errorMessage","listOfTodos","todos","getOrder","order","getSortBy","initialState","store","createStore","action","loading","filter","todo","id","map","completed","composeWithDevTools","API_URL","getTodos","a","fetch","response","json","getUsers","TodoCard","title","user","dispatch","useDispatch","className","checked","onChange","setStatus","name","onClick","deleteTodo","SORT_BY_OPTIONS","TodoList","useSelector","activeFilter","sortedTodos","useMemo","sortDirection","sort","b","localeCompare","Number","key","App","length","Promise","all","then","todoFromServer","usersFromServer","preparedTodosList","post","find","userId","setTodos","catch","e","handleError","message","finally","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee895fe3.chunk.js","sourcesContent":["import { createStore, AnyAction } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst SORT_BY_OPTIONS = {\n  title: 'title',\n  completed: 'completed',\n  userName: 'userName',\n};\n\nconst ORDER = {\n  asc: 'asc',\n  desc: 'desc',\n};\n\nconst START_LOADING = 'START_LOADING';\nconst SET_TODOS = 'SET_TODOS';\nconst HANDLE_ERROR = 'HANDLE_ERROR';\nconst FINISH_LOADING = 'FINISH_LOADING';\nconst DELETE_TODO = 'DELETE_TODO';\nconst SET_STATUS = 'SET_STATUS';\nconst SORT_BY = 'SORT_BY';\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const finishLoading = () => ({ type: FINISH_LOADING });\n\nexport const setTodos = (todos: Todo[]) => ({ type: SET_TODOS, todos });\nexport const handleError = (errorMessage: string) => ({ type: HANDLE_ERROR, errorMessage });\nexport const deleteTodo = (id: number) => ({ type: DELETE_TODO, id });\nexport const setStatus = (id: number) => ({ type: SET_STATUS, id });\nexport const sortBy = (field: string) => ({ type: SORT_BY, field });\n\nexport const isLoading = (state: RootState) => state.isLoading;\nexport const hasError = (state: RootState) => state.errorMessage;\nexport const listOfTodos = (state: RootState) => state.todos;\nexport const getOrder = (state: RootState) => state.order;\nexport const getSortBy = (state: RootState) => state.sortBy;\n\nexport type RootState = {\n  isLoading: boolean;\n  errorMessage: string;\n  sortBy: string;\n  order: string;\n  todos: Todo[];\n};\n\nconst initialState: RootState = {\n  isLoading: false,\n  errorMessage: '',\n  sortBy: SORT_BY_OPTIONS.title,\n  order: ORDER.asc,\n  todos: [],\n};\n\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        loading: true,\n        hasError: '',\n      };\n\n    case SET_TODOS:\n      return {\n        ...state,\n        todos: action.todos,\n        loading: false,\n      };\n\n    case HANDLE_ERROR:\n      return {\n        ...state,\n        errorMessage: action.errorMessage,\n        isLoading: false,\n      };\n\n    case FINISH_LOADING:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.id),\n      };\n\n    case SORT_BY:\n      if (state.sortBy === action.field) {\n        return {\n          ...state,\n          order: state.order === ORDER.asc ? ORDER.desc : ORDER.asc,\n        };\n      }\n\n      return {\n        ...state,\n        order: ORDER.asc,\n        sortBy: action.field,\n      };\n\n    case SET_STATUS:\n      return {\n        ...state,\n        todos: state.todos.map(todo => {\n          if (todo.id === action.id) {\n            return {\n              ...todo,\n              completed: !todo.completed,\n            };\n          }\n\n          return todo;\n        }),\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nexport default store;\n","const API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport const getTodos = async (): Promise<Todo[]> => {\n  const response = await fetch(`${API_URL}/todos.json`);\n\n  return response.json();\n};\n\nexport const getUsers = async (): Promise<User[]> => {\n  const response = await fetch(`${API_URL}/users.json`);\n\n  return response.json();\n};\n","import React from 'react';\nimport './TodoCard.scss';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteTodo, setStatus } from '../../store';\n\ntype Props = {\n  todo: Todo;\n};\n\nconst TodoCard: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n  const dispatch = useDispatch();\n\n  return (\n    <li>\n      <article className=\"app__todo\">\n        <div>\n          {`TODO: ${title}`}\n        </div>\n        <div>\n          STATUS:\n          {' '}\n          {completed ? 'completed' : 'in progress'}\n          <input\n            checked={completed}\n            type=\"checkbox\"\n            onChange={() => dispatch(setStatus(id))}\n          />\n        </div>\n        <div>\n          RESPONSIBLE:\n          {' '}\n          {user.name}\n        </div>\n        <button\n          type=\"button\"\n          className=\"app__todo-detete\"\n          onClick={() => dispatch(deleteTodo(id))}\n        >\n          Delete\n        </button>\n      </article>\n    </li>\n  );\n};\n\nexport default TodoCard;\n","import React, { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './TodoList.scss';\n\nimport TodoCard from '../TodoCard/TodoCard';\nimport {\n  sortBy,\n  getSortBy,\n  getOrder,\n} from '../../store';\n\nconst SORT_BY_OPTIONS = {\n  title: 'title',\n  completed: 'completed',\n  userName: 'userName',\n};\n\nconst ORDER = {\n  asc: 'asc',\n  desc: 'desc',\n};\n\ntype Props = {\n  todos: Todo[];\n};\n\nconst TodoList: React.FC<Props> = ({ todos }) => {\n  const dispatch = useDispatch();\n  const order = useSelector(getOrder);\n  const activeFilter = useSelector(getSortBy);\n\n  const sortedTodos = useMemo(() => {\n    const sortDirection = order === ORDER.asc ? 1 : -1;\n\n    switch (activeFilter) {\n      case SORT_BY_OPTIONS.title:\n        return [...todos]\n          .sort((a, b) => (a.title).localeCompare(b.title) * sortDirection);\n\n      case SORT_BY_OPTIONS.completed:\n        return [...todos]\n          .sort((a, b) => (Number(b.completed) - Number(a.completed)) * sortDirection);\n\n      case SORT_BY_OPTIONS.userName:\n        return [...todos]\n          .sort((a, b) => ((a.user.name).localeCompare(b.user.name)) * sortDirection);\n\n      default:\n        return todos;\n    }\n  }, [activeFilter, todos, order]);\n\n  return (\n    <div>\n      <div className=\"app__list-filters\">\n        <button\n          type=\"button\"\n          className=\"button__inner\"\n          onClick={() => dispatch(sortBy(SORT_BY_OPTIONS.title))}\n        >\n          Title\n          {activeFilter === SORT_BY_OPTIONS.title && (\n            order === ORDER.asc ? ' (asc)' : ' (desc)'\n          )}\n        </button>\n        <button\n          type=\"button\"\n          className=\"button__inner\"\n          onClick={() => dispatch(sortBy(SORT_BY_OPTIONS.completed))}\n        >\n          Status\n          {activeFilter === SORT_BY_OPTIONS.completed && (\n            order === ORDER.asc ? ' (asc)' : ' (desc)'\n          )}\n        </button>\n        <button\n          type=\"button\"\n          className=\"button__inner\"\n          onClick={() => dispatch(sortBy(SORT_BY_OPTIONS.userName))}\n        >\n          User name\n          {activeFilter === SORT_BY_OPTIONS.userName && (\n            order === ORDER.asc ? ' (asc)' : ' (desc)'\n          )}\n        </button>\n      </div>\n      <ul className=\"app__list\">\n        {sortedTodos.map(todo => (\n          <TodoCard\n            key={todo.id}\n            todo={todo}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport './App.scss';\nimport { getTodos, getUsers } from './helpers/api';\n\nimport {\n  startLoading,\n  finishLoading,\n  setTodos,\n  handleError,\n  hasError,\n  isLoading,\n  listOfTodos,\n} from './store';\nimport TodoList from './components/TodoList/TodoList';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(isLoading);\n  const errorMessage = useSelector(hasError);\n  const todos = useSelector(listOfTodos);\n\n  const getData = () => {\n    dispatch(startLoading());\n\n    Promise.all([getTodos(), getUsers()])\n      .then(([todoFromServer, usersFromServer]) => {\n        const preparedTodosList = todoFromServer.map(post => {\n          return {\n            ...post,\n            user: usersFromServer\n              .find(user => user.id === post.userId),\n          };\n        });\n\n        dispatch(setTodos(preparedTodosList as Todo[]));\n      })\n      .catch((e) => {\n        dispatch(handleError(e.message || e));\n      })\n      .finally(() => {\n        dispatch(finishLoading());\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      {todos.length === 0 && (\n        <button\n          type=\"button\"\n          className=\"app__load-button\"\n          onClick={getData}\n        >\n          {loading ? 'Loading...' : 'LOAD DATA'}\n        </button>\n      )}\n      {errorMessage && (\n        <div className=\"app__error\">\n          {`Error: ${errorMessage}`}\n        </div>\n      )}\n      {todos.length !== 0 && (\n        <TodoList todos={todos} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}